<?xml version="1.0" encoding="UTF-8"?>
<chapter xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
	xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:ns="http://docbook.org/ns/docbook">
	<title>Migration Guide</title>
	<para>The Liferay Faces project originates from the portletfaces.org community website. On April 3, 2012 Liferay
		announced that it would be assuming leadership for the portletfaces.org community. Consequently, projects at
		portletfaces.org were repackaged under the Liferay Faces umbrella project along with some name changes: <itemizedlist>
			<listitem>
				<para>AlloyFaces -&gt; Liferay Faces Alloy</para>
			</listitem>
			<listitem>
				<para>PorltetFaces -&gt; Bridge Liferay Faces Bridge</para>
			</listitem>
			<listitem>
				<para>LiferayFaces -&gt; Liferay Faces Portal</para>
			</listitem>
		</itemizedlist>
	</para>
	<sect1>
		<title>BridgeRequestAttributeListener</title>
		<para>PortletFaces Bridge provided a class named
				<literal>org.portletfaces.bridge.servlet.BridgeRequestAttributeListener</literal> but Liferay Faces
			Bridge uses <literal>com.liferay.faces.bridge.servlet.BridgeRequestAttributeListener</literal>. In order to
			migrate to the new class, you will need to refactor to the new package namespace, as a deprecated class has
			not been provided.</para>
		<example>
			<title>Refactoring BridgeRequestAttributeListener in WEB-INF/web.xml</title>
			<programlisting>
&lt;!-- PortletFaces Bridge BridgeRequestAttributeListener --&gt;
&lt;web-app&gt;
	&lt;listener&gt;
		...
		&lt;listener-class&gt;
			org.portletfaces.bridge.servlet.BridgeRequestAttributeListener
		&lt;/listener-class&gt;
		...
	&lt;/listener&gt;
&lt;/web-app&gt;

&lt;!-- Liferay Faces Bridge GenericFacesPortlet --&gt;
&lt;web-app&gt;
	&lt;listener&gt;
		...
		&lt;listener-class&gt;
			com.liferay.faces.bridge.servlet.BridgeRequestAttributeListener
		&lt;/listener-class&gt;
		...
	&lt;/listener&gt;
&lt;/web-app&gt;
			</programlisting>
		</example>
	</sect1>
	<sect1>
		<title>Configuration Option Names</title>
		<para>PortletFaces Bridge provided several configuration options for use within the WEB-INF/web.xml and
			WEB-INF/portlet.xml descriptors. In order to ease migration, the configuration option names have been reproduced
			in the Liferay Faces project. It is recommended that the new configuration option names be used, as shown in the
			following listing:<itemizedlist>
				<listitem>
					<para>org.portletfaces.bridge.containerAbleToSetHttpStatusCode -&gt; com.liferay.faces.bridge.containerAbleToSetHttpStatusCode</para>
				</listitem>
				<listitem>
					<para>org.portletfaces.bridgeRequestScopePreserved -&gt; com.liferay.faces.bridge.bridgeRequestScopePreserved</para>
				</listitem>
				<listitem>
					<para>org.portletfaces.bridge.optimizePortletNamespace -&gt; com.liferay.faces.bridge.optimizePortletNamespace</para>
				</listitem>
				<listitem>
					<para>org.portletfaces.bridge.preferPreDestroy -&gt; com.liferay.faces.bridge.preferPreDestroy</para>
				</listitem>
				<listitem>
					<para>org.portletfaces.bridge.resolveXMLEntities -&gt; com.liferay.faces.bridge.resolveXMLEntities</para>
				</listitem>
				<listitem>
					<para>org.portletfaces.bridge.resourceBufferSize -&gt;
						com.liferay.faces.bridge.resourceBufferSize</para>
				</listitem>
			</itemizedlist></para>
	</sect1>
	<sect1>
		<title>File Upload</title>
		<para>PortletFaces Bridge provided classes named
				<literal>org.portletfaces.bridge.component.HtmlInputFile</literal> and
				<literal>org.portletfaces.bridge.component.UploadedFile</literal> but Liferay Faces Bridge uses
				<literal>com.liferay.faces.bridge.component.HtmlInputFile</literal> and
				<literal>com.liferay.faces.bridge.component.UploadedFile</literal>, respectively. In order to migrate to
			the new classes, you will need to refactor to the new package namespace, as deprecated classes have not been
			provided.</para>
		<example>
			<title>Refactoring HtmlInputFile</title>
			<programlisting>
// PortletFaces Bridge package name:
import org.portletfaces.bridge.component.HtmlInputFile;

// Liferay Faces Bridge package name:
import com.liferay.faces.bridge.component.HtmlInputFile;
			</programlisting>
		</example>
		<example>
			<title>Refactoring UploadedFile</title>
			<programlisting>
// PortletFaces Bridge package name:
import org.portletfaces.bridge.component.UploadedFile;

// Liferay Faces Bridge package name:
import com.liferay.faces.bridge.component.UploadedFile;
			</programlisting>
		</example>
	</sect1>
	<sect1>
		<title>Facelet Tag Library Namespaces</title>
		<para>The projects at portletfaces.org provided several UIComponents and Composite Components for use within
			Facelet views. In order to ease migration, the tag library namespaces have been reproduced in the Liferay
			Faces project. It is recommended that the new tag library namespaces be used, as shown in the following listing:<itemizedlist>
				<listitem>
					<para>http://portletfaces.org/alloyfaces/aui -&gt; http://liferay.com/faces/aui</para>
				</listitem>
				<listitem>
					<para>http://portletfaces.org/alloyfaces/aui-cc -&gt; http://liferay.com/faces/aui-cc</para>
				</listitem>
				<listitem>
					<para>http://portletfaces.org/bridge -&gt; http://liferay.com/faces/bridge</para>
				</listitem>
				<listitem>
					<para>http://portletfaces.org/liferayfaces/liferay-ui -&gt; http://liferay.com/faces/ui</para>
				</listitem>
				<listitem>
					<para>http://portletfaces.org/liferayfaces/liferay-util -&gt; http://liferay.com/faces/util</para>
				</listitem>
				<listitem>
					<para>http://portletfaces.org/liferayfaces/liferay-security -&gt;
						http://liferay.com/faces/security</para>
				</listitem>
			</itemizedlist></para>
	</sect1>
	<sect1>
		<title>GenericFacesPortlet</title>
		<para>PortletFaces Bridge provided its own <literal>org.portletfaces.bridge.GenericFacesPortlet</literal> class
			but Liferay Faces Bridge uses the JSR 329 standard
				<literal>javax.portlet.faces.bridge.GenericFacesPortlet</literal> class. In order to ease migration, the
			old class still exists in Liferay Faces Bridge although it has been deprecated. It is recommended that the
			standard class name be used in all WEB-INF/portlet.xml <literal>portlet-class</literal> entries.</para>
		<example>
			<title>Refactoring GenericFacesPortlet in WEB-INF/portlet.xml</title>
			<programlisting>
&lt;!-- PortletFaces Bridge GenericFacesPortlet --&gt;
&lt;portlet-app&gt;
	&lt;portlet&gt;
		...
		&lt;portlet-class&gt;
			org.portletfaces.bridge.GenericFacesPortlet
		&lt;/portlet-class&gt;
		...
	&lt;/portlet&gt;
&lt;/portlet-app&gt;

&lt;!-- Liferay Faces Bridge GenericFacesPortlet --&gt;
&lt;portlet-app&gt;
	&lt;portlet&gt;
		...
		&lt;portlet-class&gt;
			javax.portlet.faces.GenericFacesPortlet
		&lt;/portlet-class&gt;
		...
	&lt;/portlet&gt;
&lt;/portlet-app&gt;
			</programlisting>
		</example>
	</sect1>
	<sect1>
		<title>LiferayFacesContext</title>
		<para>LiferayFaces provided a class named
				<literal>org.portletfaces.liferay.faces.context.LiferayFacesContext</literal> class but Liferay Faces
			Portal uses the <literal>com.liferay.faces.portal.context.LiferayFacesContext</literal> class. In order to
			ease migration, the old class still exists in Liferay Faces Portal although it has been deprecated. It is
			recommended that the standard class name be used instead.</para>
		<example>
			<title>Refactoring LiferayFacesContext</title>
			<programlisting>
// LiferayFaces package name:
import org.portletfaces.liferay.faces.context.LiferayFacesContext;

// Liferay Faces Portal package name:
import com.liferay.faces.portal.context.LiferayFacesContext;
			</programlisting>
		</example>
	</sect1>
	<sect1>
		<title>Logging</title>
		<para>The PortletFaces-Logging project at portletletfaces.org has been moved into the Liferay Faces Bridge
			codebase. In order to keep using this logging API in your portlets, you will need to refactor to the new
			package namespace, as deprecated classes have not been provided.</para>
		<example>
			<title>Refactoring LoggerFactory and Logger</title>
			<programlisting>
// PortletFaces-Logging package names:
import org.portletfaces.logging.LoggerFactory;
import org.portletfaces.logging.Logger;

// Liferay Faces Bridge package names:
import com.liferay.faces.bridge.logging.LoggerFactory;
import com.liferay.faces.bridge.logging.Logger;
			</programlisting>
		</example>
	</sect1>
	<sect1>
		<title>Portlet Preferences</title>
		<para>PortletFaces Bridge provided its own <literal>org.portletfaces.bridge.preference.Preference</literal>
			class but Liferay Faces Bridge uses the JSR 329 standard
				<literal>javax.portlet.faces.preference.Preference</literal> class. In order to migrate to the standard
			class, you will need to refactor to the new package namespace, as deprecated classes have not been
			provided.</para>
		<example>
			<title>Refactoring PortletPreference</title>
			<programlisting>
// PortletFaces Bridge package name:
import org.portletfaces.bridge.preference.Preference;

// Liferay Faces Bridge package name:
import javax.portlet.faces.preference.Preference;
			</programlisting>
		</example>
	</sect1>
</chapter>
